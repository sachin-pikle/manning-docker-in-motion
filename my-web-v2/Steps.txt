#### Option 1: Build and run apache and mysql using Dockerfile

### Docker Network
# docker network for linking mysql and apache containers
docker network create -d bridge my-web-net


### Database mysql
# docker volume for mysql data
docker volume create mysql_data

# docker build from mysql 8
docker build -t mysql-8:1.0 .

# docker mysql 8 container
docker run --name mysql -v mysql_data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=test -e MYSQL_DATABASE=docker_in_motion -d mysql-8:1.0

# Add container mysql to the network
docker network connect my-web-net mysql

# Add seed data
cat schemas/rebuild.sql | docker exec -i mysql \
       mysql -u root --password=test docker_in_motion


### Website apache
# docker volume for apache2 logs
docker volume create apache2_logs

# docker build from apache2
docker build -t my-web:1.1 .

# docker apache2 container
docker run --rm --name my-web -d -p 80:80 -v apache2_logs:/var/log/apache2 my-web:1.1

# Add container apache2 to the network
docker network connect my-web-net my-web


#### Option 2: Build and run apache and mysql using docker-compose

### docker-compose
# start using docker-compose up
docker-compose up -d

# Add seed data
cat mysql/schemas/rebuild.sql | docker exec -i my-web-v2_mysql_1 \
       mysql -u root --password=test docker_in_motion

# stop and remove using docker-compose down
docker-compose down

# Build images again after changes and redeploy
docker-compose build
docker-compose up -d



